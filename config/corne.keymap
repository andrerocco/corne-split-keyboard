#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        COMBO_ALT {
            bindings = <&kp LEFT_ALT>;
            key-positions = <37 38>;
            layers = <0>;
        };

        COMBO_SUPER {
            bindings = <&kp LEFT_GUI>;
            key-positions = <12 24>;
        };

        COMBO_ESC {
            bindings = <&kp ESCAPE>;
            key-positions = <0 12>;
        };

        COMBO_UNDERSCORE {
            bindings = <&kp UNDERSCORE>;
            key-positions = <16 4>;
        };

        COMBO_MINUS {
            bindings = <&kp MINUS>;
            key-positions = <16 15>;
        };

        COMBO_PLUS {
            bindings = <&kp PLUS>;
            key-positions = <17 16>;
        };

        COMBO_EQUALS {
            bindings = <&kp EQUAL>;
            key-positions = <19 20>;
        };

        COMBO_EXCLAMATION {
            bindings = <&kp EXCLAMATION>;
            key-positions = <13 25>;
        };

        COMBO_AT {
            bindings = <&kp AT_SIGN>;
            key-positions = <14 26>;
        };

        COMBO_HASHTAG {
            bindings = <&kp HASH>;
            key-positions = <15 27>;
        };

        COMBO_DOLLARSIGN {
            bindings = <&kp DOLLAR>;
            key-positions = <16 28>;
        };

        COMBO_PERCENT {
            bindings = <&kp PERCENT>;
            key-positions = <17 29>;
        };

        COMBO_AMPERSAND {
            bindings = <&kp AMPERSAND>;
            key-positions = <19 31>;
        };

        COMBO_ASTERISK {
            bindings = <&kp ASTERISK>;
            key-positions = <20 32>;
        };

        COMBO_COPY {
            bindings = <&kp LC(C)>;
            key-positions = <27 28>;
        };

        COMBO_CUT {
            bindings = <&kp LC(X)>;
            key-positions = <26 27>;
        };

        COMBO_PASTE {
            bindings = <&kp LC(V)>;
            key-positions = <26 28>;
        };
    };

    behaviors {
        SWAP: swapper {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <24 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
&kp TAB         &kp Q         &kp W  &kp E      &kp R           &kp T    &kp Y      &kp U  &kp I      &kp O      &kp P           &kp GRAVE
&kp BSPC        &kp A         &kp S  &kp D      &kp F           &kp G    &kp H      &kp J  &kp K      &kp L      &kp APOSTROPHE  &kp SEMICOLON
&kp LEFT_SHIFT  &kp LEFT_ALT  &kp Z  &kp X      &kp C           &kp V    &kp B      &kp N  &kp M      &kp COMMA  &kp PERIOD      &kp SLASH
                                     &kp LCTRL  &kp LEFT_SHIFT  &mo 1    &kp SPACE  &mo 2  &kp ENTER
            >;
        };

        LOWER {
            bindings = <
&kp SWAP       &kp N1          &kp N2         &kp N3     &kp N4     &kp N5      &kp PLUS   &kp AMPERSAND   &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE
&kp BACKSPACE  &kp N6          &kp N7         &kp N8     &kp N9     &kp N0      &kp MINUS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LBKT              &kp RBKT               &kp COLON
&trans         &kp UNDERSCORE  &kp BACKSLASH  &kp MINUS  &kp EQUAL  &kp PLUS    &trans     &trans          &trans           &kp LESS_THAN         &kp GREATER_THAN       &kp QUESTION
                                              &trans     &trans     &trans      &kp SPACE  &mo 3           &trans
            >;
        };

        RAISE {
            bindings = <
&kp ESCAPE      &kp EXCLAMATION  &kp AT_SIGN  &kp HASH   &kp DOLLAR      &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK   &kp C_PREVIOUS  &kp C_NEXT        &kp C_VOLUME_UP
&kp BACKSPACE   &trans           &trans       &trans     &trans          &trans         &trans     &kp LEFT       &kp DOWN       &kp UP          &kp RIGHT         &kp C_VOLUME_DOWN
&kp LEFT_SHIFT  &trans           &trans       &trans     &trans          &trans         &trans     &trans         &kp PAGE_DOWN  &kp PAGE_UP     &kp C_PLAY_PAUSE  &kp K_MUTE
                                              &kp LCTRL  &kp LEFT_SHIFT  &mo 3          &trans     &trans         &trans
            >;
        };

        ADJUST {
            bindings = <
&kp F1   &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&kp DEL  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
                         &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
